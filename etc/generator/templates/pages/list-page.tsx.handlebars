import React from 'react'
import { translate, TranslateProps } from "react-polyglot"
import { RouteChildrenProps } from 'react-router-dom'
import { makeStyles } from '@material-ui/core/styles'
import AddCircleIcon from '@material-ui/icons/AddCircle'
import { Divider, Button, withStyles, StyledComponentProps } from '@material-ui/core/'
import Breadcrumbs from "../components/Breadcrumbs";
import { {{name}}Interface } from '../models/{{name}}Interface'
import { DataGrid, GridColumns } from '@material-ui/data-grid';
import { {{property}}DataSource } from "../services/data/{{name}}DataSource"

export interface {{name}}ListPagePropsInterface extends RouteChildrenProps, TranslateProps, StyledComponentProps {

}

export interface {{name}}ListPageStateInterface {
  data: any
}

const useStyles: any = makeStyles((theme) => ({
  button: {
    margin: theme.spacing(1),
  },
}));

const breadcrumbs = [
  {
    title: "Home",
    url: "#/",
  },
  {
    title: "{{capitalize name}}s",
    url: "#/{{route}}",
  }
];

const columns: GridColumns = [
  {{#each fields}}
    {
      field: '{{@key}}',
      headerName: '{{capitalize @key}}'
    },
  {{/each}}
];

export class {{name}}ListPage extends React.Component<{{name}}ListPagePropsInterface, {{name}}ListPageStateInterface> {

  public readonly state = {
    data: []
  }

  componentDidMount() {
    {{property}}DataSource.collection().then(collection => {
      this.setState({ data: collection?.members });
    })
  }

  processColumns(columns: GridColumns) {
    return columns;
  }

  render() {
    const { t, classes } = this.props
    const { data } = this.state

    return (
      <div className="container">
        <div className="row">
          <div className="col-12">
            <h1>{t('{{ capitalize name }}s')}</h1>
            <Breadcrumbs data={breadcrumbs}/>
            <Divider light />
            <Button variant="contained" color="primary" href="#/{{route}}/new" className={classes?.button} startIcon={<AddCircleIcon/>}>
              {t('Create new')}
            </Button>
            <DataGrid rows={data} columns={this.processColumns(columns)} pageSize={5} checkboxSelection />
          </div>
        </div>
      </div>
    )
  }
}

export default translate()(withStyles(useStyles)({{name}}ListPage));
