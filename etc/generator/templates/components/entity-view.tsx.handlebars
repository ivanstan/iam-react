import React from 'react'
import { translate, TranslateProps } from "react-polyglot"
import { {{name}}Interface } from '../../models/{{name}}Interface'
{{#if hasAssociations }}
{{#each fields}}
{{#if this.target}}
import { {{this.target}}Interface } from '../../models/{{this.target}}Interface'
import {{capitalize (camelcase this.target)}}EntityView from './{{this.target}}EntityView'
{{/if}}
{{/each}}
{{/if}}

export interface {{name}}EntityViewPropsInterface extends TranslateProps {
  entity: {{name}}Interface|null
}

export interface {{name}}EntityViewStateInterface {

}

export class {{name}}EntityView extends React.Component<{{name}}EntityViewPropsInterface, {{name}}EntityViewStateInterface> {

  render() {
    const { entity, t } = this.props

    if (entity === null) {
      return null
    }

    return (
      <table className="table">
      {{#each fields}}
        <tr>
          <td>{t('{{capitalize @key}}')}</td>
          <td>
            {{#if (eq this.type "array")}}
            {entity.{{@key}}?.map((entity: {{this.target}}Interface, index: number) => <{{this.target}}EntityView key={index} entity={entity}/>)}
            {{else}}
            { entity.{{@key}} }
            {{/if}}
          </td>
        </tr>
      {{/each}}
      </table>
    )
  }

}

export default translate()({{name}}EntityView)
